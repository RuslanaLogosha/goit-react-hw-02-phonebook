{"version":3,"sources":["components/ContactForm/contactForm.js","components/ContactList/contactList.js","components/Filter/filter.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","shortid","generate","numberInpitId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","onChange","id","numberInputId","Component","ContactList","contacts","onDeleteContact","map","onClick","Filter","App","filter","addContact","newContact","find","contact","alert","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89675a7d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport shortid from 'shortid';\n\n\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: ''\n  }\n  \n  nameInputId = shortid.generate();\n  numberInpitId = shortid.generate();\n\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    this.props.onSubmit(name, number);\n    this.reset();\n  }  \n  \n  reset() {\n    this.setState({\n      name: '',\n      number: ''\n    })\n  } \n\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label htmlFor={this.numberInputId}>\n          Number\n          <input\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n          />\n        </label>\n\n        <button type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    )\n  }\n}\n\nexport default ContactForm;","import React from 'react';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id}>\n        <span>{name}</span>:<span>{number}</span>\n        <button\n          type=\"button\"\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n  \n\nexport default ContactList;","import React from 'react';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <input type='text' value={value} onChange={onChange} />\n  </label>\n);\n\nexport default Filter;","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport ContactForm from './components/ContactForm/contactForm';\nimport ContactList from './components/ContactList/contactList';\nimport Filter from './components/Filter/filter';\n\n\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: ''\n  }\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    }\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`)\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  \n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n \n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }));\n  };\n  \n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n\n    return (\n      <>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={this.addContact}/>\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={this.changeFilter}/>\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact}/>\n      </>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}